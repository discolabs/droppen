{% raw %}[
  {
    "keyword": "if",
    "description": "Executes a block of code only if a certain condition is met."
  },
  {
    "keyword": "elsif / else",
    "description": "Adds more conditions within an if or unless block."
  },
  {
    "keyword": "case/when",
    "description": "Creates a switch statement to compare a variable with different values. case initializes the switch statement, and when compares its values."
  },
  {
    "keyword": "unless",
    "description": "Similar to if, but executes a block of code only if a certain condition is not met."
  },
  {
    "keyword": "for",
    "description": "Repeatedly executes a block of code. For a full list of attributes available within a for loop, see forloop (object).\n\nfor loops can output a maximum of 50 results per page. In cases where there are more than 50 results, use the paginate tag to split them across multiple pages."
  },
  {
    "keyword": "break",
    "description": "Causes the loop to stop iterating when it encounters the break tag."
  },
  {
    "keyword": "continue",
    "description": "Causes the loop to skip the current iteration when it encounters the continue tag."
  },
  {
    "keyword": "limit (for)",
    "description": "Exits the for loop at a specific index."
  },
  {
    "keyword": "offset (for)",
    "description": "Starts the for loop at a specific index."
  },
  {
    "keyword": "range (for)",
    "description": "Defines a range of numbers to loop through. The range can be defined by both literal and variable numbers."
  },
  {
    "keyword": "reversed(for)",
    "description": "Reverses the order of the for loop."
  },
  {
    "keyword": "cycle",
    "description": "Loops through a group of strings and outputs them in the order that they were passed as parameters. Each time cycle is called, the next string that was passed as a parameter is output.\n\ncycle must be used within a for loop block."
  },
  {
    "keyword": "tablerow",
    "description": "Generates an HTML <table>. Must be wrapped in an opening <table> and closing </table> HTML tags. For a full list of attributes available within a tablerow loop, see tablerow (object)."
  },
  {
    "keyword": "cols (tablerow)",
    "description": "Defines how many columns the tables should have."
  },
  {
    "keyword": "limit  (tablerow)",
    "description": "Exits the tablerow after a specific index."
  },
  {
    "keyword": "offset  (tablerow)",
    "description": "Starts the tablerow after a specific index."
  },
  {
    "keyword": "range  (tablerow)",
    "description": "Defines a range of numbers to loop through. The range can be defined by both literal and variable numbers."
  },
  {
    "keyword": "comment",
    "description": "Allows you to leave un-rendered code inside a Liquid template. Any text within the opening and closing comment blocks will not be output, and any Liquid code within will not be executed."
  },
  {
    "keyword": "include",
    "description": "Inserts a snippet from the snippets folder of a theme."
  },
  {
    "keyword": "with (include)",
    "description": "The with parameter assigns a value to a variable inside a snippet that shares the same name as the snippet."
  },
  {
    "keyword": "form",
    "description": "Creates an HTML <form> element with all the necessary attributes (action, id, etc.) and <input> to submit the form successfully."
  },
  {
    "keyword": "activate_customer_password (form)",
    "description": "Generates a form for activating a customer account on the activate_account.liquid template."
  },
  {
    "keyword": "new_comment (form)",
    "description": "Generates a form for creating a new comment in the article.liquid template. Requires the article object as a parameter."
  },
  {
    "keyword": "contact (form)",
    "description": "Generates a form for submitting an email through the Liquid contact form."
  },
  {
    "keyword": "create_customer (form)",
    "description": "Generates a form for creating a new customer account on the register.liquid template."
  },
  {
    "keyword": "customer_address (form)",
    "description": "Generates a form for creating or editing customer account addresses on the addresses.liquid template. When creating a new address, include the parameter customer.new_address. When editing an existing address, include the parameter address."
  },
  {
    "keyword": "customer_login (form)",
    "description": "Generates a form for logging into Customer Accounts on the login.liquid template."
  },
  {
    "keyword": "recover_customer_password (form)",
    "description": "Generates a form for recovering a lost password on the login.liquid template."
  },
  {
    "keyword": "layout",
    "description": "Loads an alternate template file from the layout folder of a theme. If no alternate layout is defined, the theme.liquid template is loaded by default."
  },
  {
    "keyword": "paginate",
    "description": "Splitting products, blog articles, and search results across multiple pages is a necessary component of theme design as you are limited to 50 results per page in any for loop."
  },
  {
    "keyword": "raw",
    "description": "Allows output of Liquid code on a page without being parsed."
  },
  {
    "keyword": "assign",
    "description": "Creates a new variable."
  },
  {
    "keyword": "capture",
    "description": "Captures the string inside of the opening and closing tags and assigns it to a variable. Variables created through {% capture %} are strings."
  },
  {
    "keyword": "increment",
    "description": "Creates a new number variable, and increases its value by one every time it is called. The initial value is 0."
  },
  {
    "keyword": "decrement",
    "description": "Creates a new number variable, and decreases its value by one every time it is called. The initial value is -1."
  },
  {
    "keyword": "join",
    "description": "Joins the elements of an array with the character passed as the parameter. The result is a single string."
  },
  {
    "keyword": "first",
    "description": "Returns the first element of an array."
  },
  {
    "keyword": "last",
    "description": "Gets the last element passed in an array."
  },
  {
    "keyword": "index",
    "description": "Returns the item at the specified index location in an array. Note that array numbering starts from zero, so the first item in an array is referenced with [0]."
  },
  {
    "keyword": "map",
    "description": "Accepts an array element's attribute as a parameter and creates a string out of each array element's value."
  },
  {
    "keyword": "size",
    "description": "Returns the size of a string or an array."
  },
  {
    "keyword": "sort",
    "description": "Sorts the elements of an array by a given attribute of an element in the array."
  },
  {
    "keyword": "img_tag",
    "description": "Generates an image tag."
  },
  {
    "keyword": "script_tag",
    "description": "Generates a script tag."
  },
  {
    "keyword": "stylesheet_tag",
    "description": "Generates a stylesheet tag."
  },
  {
    "keyword": "ceil",
    "description": "Rounds an output up to the nearest integer."
  },
  {
    "keyword": "divided_by",
    "description": "Divides an output by a number. The output is rounded to the nearest integer."
  },
  {
    "keyword": "floor",
    "description": "Rounds an output down to the nearest integer."
  },
  {
    "keyword": "minus",
    "description": "Subtracts a number from an output."
  },
  {
    "keyword": "plus",
    "description": "Adds a number to an output."
  },
  {
    "keyword": "round",
    "description": "Rounds the output to the nearest integer or specified number of decimals."
  },
  {
    "keyword": "times",
    "description": "Multiplies an output by a number."
  },
  {
    "keyword": "modulo",
    "description": "Divides an output by a number and returns the remainder."
  },
  {
    "keyword": "money",
    "description": "Formats the price based on the shop's HTML without currency setting."
  },
  {
    "keyword": "money_with_currency",
    "description": "Formats the price based on the shop's HTML with currency setting."
  },
  {
    "keyword": "money_without_trailing_zeros",
    "description": "Formats the price based on the shop's HTML with currency setting and excludes the decimal point and trailing zeros."
  },
  {
    "keyword": "money_without_currency",
    "description": "Formats the price using a decimal."
  },
  {
    "keyword": "append",
    "description": "Appends characters to a string."
  },
  {
    "keyword": "camelcase",
    "description": "Converts a string into CamelCase."
  },
  {
    "keyword": "capitalize",
    "description": "Capitalizes the first word in a string"
  },
  {
    "keyword": "downcase",
    "description": "Converts a string into lowercase."
  },
  {
    "keyword": "escape",
    "description": "Escapes a string."
  },
  {
    "keyword": "handle/handleize",
    "description": "Formats a string into a handle."
  },
  {
    "keyword": "md5",
    "description": "Converts a string into an MD5 hash."
  },
  {
    "keyword": "newline_to_br",
    "description": "Inserts a <br > linebreak HTML tag in front of each line break in a string."
  },
  {
    "keyword": "pluralize",
    "description": "Outputs the singular or plural version of a string based on the value of a number. The first parameter is the singular string and the second parameter is the plural string."
  },
  {
    "keyword": "prepend",
    "description": "Prepends characters to a string."
  },
  {
    "keyword": "remove",
    "description": "Removes all occurrences of a substring from a string."
  },
  {
    "keyword": "remove_first",
    "description": "Removes only the first occurrence of a substring from a string."
  },
  {
    "keyword": "replace",
    "description": "Replaces all occurrences of a string with a substring."
  },
  {
    "keyword": "replace_first",
    "description": "Replaces the first occurrence of a string with a substring."
  },
  {
    "keyword": "slice",
    "description": "The slice filter returns a substring, starting at the specified index. An optional second parameter can be passed to specify the length of the substring. If no second parameter is given, a substring of one character will be returned."
  },
  {
    "keyword": "split",
    "description": "The split filter takes on a substring as a parameter. The substring is used as a delimiter to divide a string into an array. You can output different parts of an array using array filters."
  },
  {
    "keyword": "strip",
    "description": "Strips tabs, spaces, and newlines (all whitespace) from the left and right side of a string."
  },
  {
    "keyword": "lstrip",
    "description": "Strips tabs, spaces, and newlines (all whitespace) from the left side of a string."
  },
  {
    "keyword": "rstrip",
    "description": "Strips tabs, spaces, and newlines (all whitespace) from the right side of a string."
  },
  {
    "keyword": "strip_html",
    "description": "Strips all HTML tags from a string."
  },
  {
    "keyword": "strip_newlines",
    "description": "Removes any line breaks/newlines from a string."
  },
  {
    "keyword": "truncate",
    "description": "Truncates a string down to 'x' characters, where x is the number passed as a parameter. An ellipsis (...) is appended to the string and is included in the character count."
  },
  {
    "keyword": "truncatewords",
    "description": "Truncates a string down to 'x' words, where x is the number passed as a parameter. An ellipsis (...) is appended to the truncated string."
  },
  {
    "keyword": "uniq",
    "description": "Removes any duplicate instances of an element in an array."
  },
  {
    "keyword": "upcase",
    "description": "Converts a string into uppercase."
  },
  {
    "keyword": "url_escape",
    "description": "Identifies all characters in a string that are not allowed in URLS, and replaces the characters with their escaped variants."
  },
  {
    "keyword": "url_param_escape",
    "description": "Replaces all characters in a string that are not allowed in URLs with their escaped variants, including the ampersand (&)."
  },
  {
    "keyword": "asset_url",
    "description": "Returns the URL of a file in the \"assets\" folder of a theme."
  },
  {
    "keyword": "file_url",
    "description": "Returns the URL of a file in the Files page of the admin."
  },
  {
    "keyword": "customer_login_link",
    "description": "Generates a link to the customer login page."
  },
  {
    "keyword": "global_asset_url",
    "description": "Returns the URL of a global asset. Global assets are kept in a directory on Shopify's servers. Using global assets can improve the load times of your pages."
  },
  {
    "keyword": "img_url",
    "description": "Returns the URL of an image. Accepts an image size as a parameter. The img_url filter can be used on the following objects:\n\n    product\n    variant\n    line item\n    collection\n    image"
  },
  {
    "keyword": "link_to",
    "description": "Generates an HTML link. The first parameter is the URL of the link, and the optional second parameter is the title of the link."
  },
  {
    "keyword": "link_to_vendor",
    "description": "Creates an HTML link to a collection page that lists all products belonging to a vendor."
  },
  {
    "keyword": "link_to_type",
    "description": "Creates an HTML link to a collection page that lists all products belonging to a product type."
  },
  {
    "keyword": "link_to_tag",
    "description": "Creates a link to all products in a collection that have a given tag."
  },
  {
    "keyword": "link_to_add_tag",
    "description": "Creates a link to all products in a collection that have a given tag as well as any tags that have been already selected."
  },
  {
    "keyword": "link_to_remove_tag",
    "description": "Generates a link to all products in a collection that have the given tag and all the previous tags that might have been added already."
  },
  {
    "keyword": "payment_type_img_url",
    "description": "Returns the URL of the payment type's SVG image. Used in conjunction with the shop.enabled_payment_types variable."
  },
  {
    "keyword": "product_img_url",
    "description": "Generates the product image URL. Accepts an image size as a parameter."
  },
  {
    "keyword": "collection_img_url",
    "description": "Returns the collection image's URL. Accepts the same size parameters as product_img_url."
  },
  {
    "keyword": "shopify_asset_url",
    "description": "Returns the URL of a global assets that are found on Shopify's servers. Globally-hosted assets include:\n\n    option_selection.js\n    api.jquery.js\n    shopify_common.js,\n    customer_area.js\n    currencies.js\n    customer.css"
  },
  {
    "keyword": "url_for_type",
    "description": "Creates a URL that links to a collection page containing products with a specific product type."
  },
  {
    "keyword": "url_for_vendor",
    "description": "Creates a URL that links to a collection page containing products with a specific product vendor."
  },
  {
    "keyword": "within",
    "description": "Creates a collection-aware product URL by prepending /collections/collection-handle to a product URL, where collection-handle is the handle of the collection that is currently being viewed."
  },
  {
    "keyword": "date",
    "description": "Converts a timestamp into another date format."
  },
  {
    "keyword": "default",
    "description": "Sets a default value for any variable with no assigned value. Can be used with strings, arrays, and hashes."
  },
  {
    "keyword": "default_errors",
    "description": "Outputs default error messages for the form.errors variable. The messages returned are dependent on the strings returned by form.errors."
  },
  {
    "keyword": "default_pagination",
    "description": "Creates a set of links for paginated results. Used in conjunction with the paginate variable."
  },
  {
    "keyword": "highlight",
    "description": "Wraps words inside search results with an HTML <strong> tag with the class highlight if it matches the submitted search.terms."
  },
  {
    "keyword": "highlight_active_tag",
    "description": "Wraps a tag link in a <span> with the class active if that tag is being used to filter a collection."
  },
  {
    "keyword": "json",
    "description": "Converts a string into JSON format."
  },
  {
    "keyword": "weight_with_unit",
    "description": "Formats the product variant's weight. The weight unit is set in General Settings."
  }
]{% endraw %}
